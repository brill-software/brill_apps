<h1>Tomcat SSL Certificate Installation</h1>
<p>This article covers the installation of an SSL certificate using NameCheap as the Certificate Provider.</p>
<h2>Introduction</h2>
<p>To encrypt and decrypt messages, a private and public key are required. The private key should be generated on Tomcat server and never leave the server other than for backup purposes. The public key is contained within a certificate. The certificate needs to be signed by a trusted Certification Authority (CA).</p>
<p>The process involves generating a private key (using a self signed certificate) in a Java Keystore and using it to generate a CSR request containing details for the certificate. The CSR is uploaded to the Certificate Provider.</p>
<p>There's a verification process to prove that you own the web site. You either have to make a DNS entry change or place a generated file in a specific location on the web server. Once you've made the change, you can request that the certificate be generated.</p>
<p>You'll receive an email containing your signed site certificate and a ZIP file containing two CA certificates. The certificates need to be unpacked into individual files and loaded into the same Java Keystore that contains the private key.</p>
<p>Then when Tomcat starts up, it can get the private key, site certificate, intermediate CA certificate and root CA certificate from the Keystore and everything will hopefully work perfectly, until the next time you need to renew the site certificate.</p>
<p>It's best to renew the certificate at least a week or two before it expires. Namecheap provide the extra days on the new certificate between the request date and the expiry of the previous certificate, so you don't loose out by renewing the certificate early.</p>
<h2>Creating the Keystore and a self signed certificate</h2>
<p>The first step is to generate a self signed certificate that has a public and private key. The private key will be used by Tomcat for encryption and description. The private key needs to remain private and ideally never leave the server.</p>
<pre>keytool -genkey -alias tomcat -keyalg RSA -keysize 2048 -validity 700 -keypass  -storepass yourKeyStorePassword -keystore yourkeysotre.jks</pre>
<p>Make a note of the keystore password and the keystore filename. The certificate that is provided by Namecheap must be loaded into the same keystore.</p>
<p>The keystore name and password will need to be provided to Tomcat later using some configuration parameters.</p>
<h2>Creating the CSR</h2>
<pre>brillserver@brill1 BrillServer % keytool -genkey -keysize 2048 -keyalg RSA -alias tomcat -keystore brill_2021_keystore.jks
Enter keystore password:  
Re-enter new password: 
What is your first and last name?
  [Unknown]:  brill.software
What is the name of your organizational unit?
  [Unknown]:  Support
What is the name of your organization?
  [Unknown]:  Brill Software Limited
What is the name of your City or Locality?
  [Unknown]:  Dublin
What is the name of your State or Province?
  [Unknown]:  Ireland
What is the two-letter country code for this unit?
  [Unknown]:  IE
Is CN=brill.software, OU=Support, O=Brill Software Limited, L=Dublin, ST=Ireland, C=IE correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA256withRSA) with a validity of 90 days
	for: CN=brill.software, OU=Support, O=Brill Software Limited, L=Dublin, ST=Ireland, C=IE
brillserver@brill1 BrillServer %</pre>
<h2>Uploading the CSR</h2>
<p>Copy and Paste the CSR to the appropriate page on the Namecheap website.</p>
<h2>Proving you own the server</h2>
<p>The easiest method is the CNAME method, as it can be done entirely using the Namecheap web interface and no changes are required on the server.</p>
<p>Follow the instructions at <a href="https://www.namecheap.com/support/knowledgebase/article.aspx/9637/14/how-can-i-complete-the-domain-control-validation-dcv-for-my-ssl-certificate/#cname" target="_blank">Namecheap SSL Certifates Page</a></p>
<p><u><strong>Very important</strong></u></p>
<p>Only copy the first part of the Host name, <u>not the domain par</u>t. &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;&lt;&lt;&lt;&lt;&lt; IMPORTANT</p>
<p>With the target, copy over the domain part as well.</p>
<p>When getting Namecheap to retry the CNAME setup, click on the EDIT METHODS button, <u>not the dropdown next to it</u>. &nbsp;&lt;&lt;&lt;&lt;&lt;&lt;&lt; IMPORTANT</p>
<h2>Email with certificates</h2>
<p>You'll receive an email from noreplay@sertigo.com (Sectigo Certification Authority) which contains your Positive SSL Certificate and a ZIP file containing two CA certificates.</p>
<p>The certificates are in PEM format and start with <code>-----BEGIN CERTIFICATE-----</code> and end with <code>-----END CERTIFICATE-----</code>.</p>
<h3>Create two files containing the two CA certificates in the ZIP file</h3>
<p>Save the ZIP to your working directory on the Server. Expand the ZIP file and open the .ca-bundle file with a text editor.</p>
<p>The file contains two certificates, the Sectigo CA intermediate certificate and the Comodo Root certificate.</p>
<p>Use the text editor to create a new file and copy and paste the first certificate and save with a name of <code>cacert_intermediate.crt</code>.</p>
<p>Copy and paste the second certificate into a file with the name <code>cacert_root.crt</code>.</p>
<h3>Create a file containing your site certificate</h3>
<p>Save the PositiveSDL Certificate text in the email to a site certificate file (e.g. <code>wwwmysitecom.crt</code>).</p>
<h3>Check the CA certificates</h3>
<p>If you have openssl installed, you can check the certificates using:</p>
<pre>openssl x509 -in cacert_root.crt -noout -text
openssl x509 -in cacert_intermediate.crt -noout -text
openssl x509 -in wwwmysitecom.crt -noout -text</pre>
<p>Check that Root file contains <code>CN=USERTrust RSA Certification Authority</code> and the Intermediate file <code>CN=Sectigo RSA Domain Validation Secure Server CA</code>.</p>
<h3>Check your site certificate</h3>
<p>Check your site certificate with:</p>
<pre>openssl x509 -in wwwmysitecom.crt -noout -text</pre>
<p>Check the <code>Not Before</code> and <code>Not After</code> dates are correct.</p>
<p>Check the Subject CN is for your web site.</p>
<h3>Add the certificates to the Java Keystore</h3>
<p>Add the root certificate:</p>
<pre>keytool -import -trustcacerts -alias tomcat -file cacert_root.crt -keystore yourkeystore.jks</pre>
<p>Add the intermediate certificate:</p>
<pre>keytool -import -trustcacerts -alias tomcat -file cacert_intermediate.crt -keystore yourkeystore.jks</pre>
<p>Add the site certificate:</p>
<pre>keytool -import -trustcacerts -alias tomcat -file wwwmysitecom.crt -keystore yourkeystore.jks</pre>